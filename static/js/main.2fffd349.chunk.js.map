{"version":3,"sources":["components/Dashboard/parser.js","firebase/firebase.js","components/Dashboard/Dashboard.js","components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["currentMentor","getMentorList","dataObj","mentorsList","dataFile","Object","keys","mentors","i","length","mentorLogin","mentorObject","value","label","push","getTaskURL","name","tasksStatus","taskLink","getTaskStatus","taskStatus","replace","getStudenName","studentName","mentor","mentorStudents","studentGithub","getScore","currentTaskName","score","tasks","setTooltip","studentsStatus","studentStatus","reasonDismiss","getPrTask","pr","prLinks","getCurrentMentor","localStorage","getItem","getStudent","students","setClass","setTask","map","react_default","a","createElement","key","className","rel","target","href","style","textAlign","checkTaskTime","getCheckTaskTime","commonCountTask","taskCount","percent","Math","round","getStatistics","setScore","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","init","Dashboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","database","on","snap","setState","val","handleChange","selectedOption","setItem","ref","child","state","_this$state","react","react_select_esm","onChange","options","align","tooltip","React","Component","Form","App","BrowserRouter","basename","process","Switch","Route","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fffd349.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet currentMentor = \"\";\r\n\r\nfunction getMentorList (dataObj) {\r\n  const mentorsList = [];\r\n  const dataFile = Object.keys(dataObj.mentors);\r\n\r\n  for (let i = 0; i < dataFile.length; i++) {\r\n    const mentorLogin = dataFile[i];\r\n    const mentorObject = {};\r\n\r\n    mentorObject.value = mentorLogin;\r\n    mentorObject.label = mentorLogin;\r\n    mentorsList.push(mentorObject);\r\n  }\r\n\r\n  return mentorsList;\r\n}\r\n\r\nfunction getTaskURL(name, dataObj) {\r\n  const getUrl = dataObj.tasksStatus[name].taskLink;\r\n  return getUrl;\r\n}\r\n\r\nfunction getCheckTaskTime(name, dataObj) {\r\n  const CheckTaskTime = dataObj.tasksStatus[name].checkTaskTime;\r\n  return CheckTaskTime;\r\n}\r\n\r\nfunction getStatistics(name, dataObj) {\r\n  const commonCountTask = dataObj.taskCount;\r\n  const countCurrentTask = dataObj.tasksStatus[name].taskCount;\r\n  const percent = (countCurrentTask / commonCountTask) * 100;\r\n  if (percent > 0) {\r\n    return Math.round(percent) + \" %\";\r\n  }\r\n}\r\n\r\nfunction getTaskStatus(name, dataObj) {\r\n  const getStatus = dataObj.tasksStatus[name].taskStatus;\r\n  return getStatus.replace(/\\s+/g, \"\");\r\n}\r\n\r\nfunction getStudenName(studentName, mentor, dataObj) {\r\n  const studentGithubUrl = dataObj.mentors[mentor].mentorStudents[studentName].studentGithub;\r\n  return studentGithubUrl;\r\n}\r\n\r\nfunction getScore(studentName, mentor, currentTaskName, dataObj) {\r\n  const score = dataObj.mentors[mentor].mentorStudents[studentName].tasks[currentTaskName];\r\n  if (score) {\r\n    return score;\r\n  }\r\n}\r\n\r\nfunction setTooltip(mentor, studentName, dataObj) {\r\n  const studentsStatus = dataObj.mentors[mentor].mentorStudents[studentName].studentStatus;\r\n  const reasonDismiss = dataObj.mentors[mentor].mentorStudents[studentName].reasonDismiss;\r\n  if (studentsStatus === \"dismissed\") {\r\n    return reasonDismiss;\r\n  }\r\n}\r\n\r\nfunction getPrTask(studentName, mentor, currentTaskName, dataObj) {\r\n  const pr = dataObj.mentors[mentor].mentorStudents[studentName].prLinks[currentTaskName];\r\n  const score = dataObj.mentors[mentor].mentorStudents[studentName].tasks[currentTaskName];\r\n  if (getTaskStatus(currentTaskName, dataObj) === \"Checking\" && (score <= 0 || !score)) {\r\n    return \"#\";\r\n  }\r\n  if (!score || score === 0) {\r\n    return;\r\n  }\r\n  return pr;\r\n}\r\n\r\nfunction getCurrentMentor(mentor) {\r\n  if (localStorage.getItem(\"currentMentor\")) {\r\n    currentMentor = localStorage.getItem(\"currentMentor\");\r\n  }\r\n  if (mentor) {\r\n    currentMentor = mentor.value;\r\n  }\r\n  return currentMentor;\r\n}\r\n\r\nconst getStudent = (mentor, dataObj) => {\r\n  let students = [];\r\n  if (localStorage.getItem(\"currentMentor\")) {\r\n    currentMentor = localStorage.getItem(\"currentMentor\");\r\n    if (dataObj.mentors[currentMentor].mentorStudents) {\r\n      students = Object.keys(dataObj.mentors[currentMentor].mentorStudents);\r\n    }\r\n  }\r\n  if (mentor) {\r\n    currentMentor = mentor.value;\r\n    if (dataObj.mentors[currentMentor].mentorStudents) {\r\n      students = Object.keys(dataObj.mentors[currentMentor].mentorStudents);\r\n    }\r\n  }\r\n  return students;\r\n};\r\n\r\nfunction setClass(studentName, mentor, name, dataObj) {\r\n  const studentsStatus = dataObj\r\n    .mentors[getCurrentMentor(mentor)]\r\n    .mentorStudents[studentName].studentStatus;\r\n\r\n  if (\r\n    !getScore(studentName, getCurrentMentor(mentor), name, dataObj) &&\r\n    getTaskStatus(name, dataObj) === \"Checked\" &&\r\n    studentsStatus !== \"dismissed\"\r\n  ) {\r\n    return \"failed\";\r\n  } else if (\r\n    !getScore(studentName, getCurrentMentor(mentor), name, dataObj) &&\r\n    getTaskStatus(name, dataObj) === \"Checked\" &&\r\n    studentsStatus === \"dismissed\"\r\n  ) {\r\n    return \"failed dismissed\";\r\n  } else if (\r\n    getTaskStatus(name, dataObj) &&\r\n    studentsStatus === \"dismissed\"\r\n  ) {\r\n    return getTaskStatus(name, dataObj) + \" dismissed\";\r\n  } else {\r\n    return getTaskStatus(name, dataObj);\r\n  }\r\n}\r\n\r\nfunction setStudent(mentor, dataObj) {\r\n  return getStudent(mentor, dataObj).map(studentName => (\r\n    <td\r\n      className='studentName cell'\r\n      key={studentName}\r\n      tooltip={setTooltip(getCurrentMentor(mentor), studentName, dataObj)}\r\n\r\n    >\r\n      <a\r\n        className=\"link\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        href={getStudenName(studentName, getCurrentMentor(mentor), dataObj)}\r\n      >\r\n        {studentName}\r\n      </a>\r\n    </td>\r\n  ));\r\n}\r\n\r\nfunction setScore(mentor, name, dataObj) {\r\n  return getStudent(mentor, dataObj).map(studentName => (\r\n    <td\r\n      style={{ textAlign: \"center\" }}\r\n      className={setClass(studentName, mentor, name, dataObj)}\r\n      key={studentName}\r\n    >\r\n      <a\r\n        className=\"link\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        href={getPrTask(studentName, getCurrentMentor(mentor), name, dataObj)}\r\n      >\r\n        {getScore(studentName, getCurrentMentor(mentor), name, dataObj)}\r\n      </a>\r\n    </td>\r\n  ));\r\n}\r\n\r\nfunction setTask(mentor, dataObj) {\r\n  const tasks = Object.keys(dataObj.tasksStatus);\r\n  return tasks.map(name => (\r\n    <tr key={name}>\r\n      <td className={getTaskStatus(name, dataObj)}>\r\n        <a\r\n          className=\"link taskname\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          href={getTaskURL(name, dataObj)}\r\n        >\r\n          {name}\r\n        </a>\r\n      </td>\r\n      <td className={getTaskStatus(name, dataObj)} style={{ textAlign: \"center\" }}>\r\n      {getCheckTaskTime(name, dataObj)}\r\n      </td>\r\n      <td className={getTaskStatus(name, dataObj)} style={{ textAlign: \"center\" }}>\r\n        {getStatistics(name, dataObj)}\r\n      </td>\r\n      {setScore(mentor, name, dataObj)}\r\n    </tr>\r\n  ));\r\n}\r\n\r\nexport { getMentorList, getCurrentMentor, setStudent, setTask };\r\n","import * as firebase from 'firebase/app';\r\n\r\nconst API_KEY = 'AIzaSyCX-HtE8YASWxl9k6DpQblWdLOvzsEgqUs';\r\nconst AUTH_DOMAIN = 'rss-mentor-dashboard-2185d.firebaseapp.com';\r\nconst DATABASE_URL = 'https://rss-mentor-dashboard-2185d.firebaseio.com';\r\nconst PROJECT_ID = 'rss-mentor-dashboard-2185d';\r\nconst STORAGE_BUCKET = 'rss-mentor-dashboard-2185d.appspot.com';\r\nconst MESSAGING_SENDER_ID = 569694467315;\r\n\r\nclass FireBase {\r\n  static init() {\r\n    const config = {\r\n      apiKey: API_KEY,\r\n      authDomain: AUTH_DOMAIN,\r\n      databaseURL: DATABASE_URL,\r\n      projectId: PROJECT_ID,\r\n      storageBucket: STORAGE_BUCKET,\r\n      messagingSenderId: MESSAGING_SENDER_ID,\r\n    };\r\n    firebase.initializeApp(config);\r\n  }\r\n}\r\n\r\nexport default FireBase;\r\n","import \"./Dashboard.scss\";\r\nimport React, { Fragment } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { getMentorList, getCurrentMentor, setStudent, setTask } from './parser';\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport FireBase from '../../firebase/firebase';\r\n\r\nFireBase.init();\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.database = firebase.database().ref().child('JSONData');\r\n\r\n    this.state = {\r\n      selectedOption: null,\r\n      database: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.database.on('value', (snap) => {\r\n      this.setState({\r\n        database: snap.val(),\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    localStorage.setItem(\"currentMentor\", selectedOption.value);\r\n  };\r\n\r\n  render() {\r\n    const { selectedOption, database } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        { database ? <div className=\"App\">\r\n        <Select\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={getMentorList(database)}\r\n        />\r\n\r\n        <table className=\"table mentor-table\">\r\n          <thead className=\"thead\">\r\n            <tr>\r\n              <td className=\"mentorTitle\">Ментор</td>\r\n              <td className=\"mentorName\">{getCurrentMentor(selectedOption)}</td>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        <div className=\"wrapper\">\r\n          <table align=\"center\" className=\"table task-table\">\r\n            <thead>\r\n              <tr>\r\n                <td />\r\n                <td className=\"check_time cell \">check time</td>\r\n                <td className=\"statistics cell\">statistics</td>\r\n                {setStudent(selectedOption, database)}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{setTask(selectedOption, database)}</tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <table className=\"table description-table\">\r\n          <tbody className=\"tbody\">\r\n            <tr>\r\n              <td className=\"Checked description-table__cell\" />\r\n              <td className=\"description-table__cell\">Checked by mentor</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"Checking description-table__cell\" />\r\n              <td className=\"description-table__cell\">Checking by mentor</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"InProgress description-table__cell\" />\r\n              <td className=\"description-table__cell\">In Progress</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"ToDo description-table__cell\" />\r\n              <td className=\"description-table__cell\">ToDo</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"failed description-table__cell\" />\r\n              <td className=\"description-table__cell\">No solution</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"dismissed description-table__cell\">\r\n                semitransparent student -{\" \"}\r\n              </td>\r\n              <td className=\"description-table__cell\"> student dismissed</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import \"./Form.scss\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nclass Form extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Select />\r\n\r\n        <table className=\"table mentor-table\">\r\n          <thead className=\"thead\">\r\n            <tr>\r\n              <td className=\"mentorTitle\">Заглушка</td>\r\n              <td className=\"mentorTitle\">формы</td>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","/* eslint-disable no-console */\r\nimport React from // ,{ Fragment }\r\n  \"react\";\r\nimport \"./App.scss\";\r\n// import Footer from \"./components/Footer/Footer\";\r\n// import Header from \"./components/Header/Header\";\r\n\r\n// BrowserRouter is the router implementation for HTML5 browsers (vs Native).\r\n// Link is your replacement for anchor tags.\r\n// Route is the conditionally shown component based on matching a path to a URL.\r\n// Switch returns only the first matching route rather than all matching routes.\r\nimport {\r\n  BrowserRouter as Router,\r\n  // Link,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport Form from \"./components/Form/Form\";\r\n\r\n// We give each route either a target `component`, or we can send functions in `render` or `children`\r\n// that return valid nodes. `children` always returns the given node whether there is a match or not.\r\nconst App = () => (\r\n  <Router basename={process.env.PUBLIC_URL + '/'}>\r\n    <div>\r\n      {/* <Fragment>\r\n        <Header /> */}\r\n      {/* <Link to=\"/\">Dashboard</Link>{' '}*/}\r\n      {/* <Link to={{pathname: '/form'}}>Form</Link>{' '} */}\r\n      <Switch>\r\n        <Route exact path =\"/\" component={Dashboard} />\r\n        <Route path=\"/form\" component={Form} />\r\n        <Route render={() => <h1>Page not found</h1>} />\r\n      </Switch>\r\n      {/* <Footer />\r\n      </Fragment> */}\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}